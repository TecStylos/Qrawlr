# ---------------- GRAMMAR ----------------

Grammar:
	GrammarLine ( "\n"_ GrammarLine )*

GrammarLine(hidden):
	RuleDefinition Comment?
	Comment
	Whitespace?_ "\n"~_

# ---------------- RULE DEFINITION ----------------

RuleDefinition:
	RuleHeader (Newline Whitespace)?_ RuleBody

RuleHeader:
	Identifier RuleModifierList?_ ":"_

RuleBody:
	RuleOptionDefinition (Newline_ Whitespace?_ RuleOptionDefinition)*

# ---------------- RULE MODIFIERS ----------------

RuleModifierList(hidden):
	"("_ RuleModifier (Whitespace_ RuleModifier)* ")"_

RuleModifier:
	"hidden"
	"fuse"

# ---------------- RULE OPTION ----------------

RuleOptionDefinition:
	RuleOption (Whitespace?_ RuleOption)*

RuleOption:
	Matcher RuleOptionModifiers RuleOptionExecutors?

# ---------------- OPTION MODIFIERS ----------------

RuleOptionModifiers(hidden):
	OptionModifierInvert? OptionModifierQuantifier? OptionModifierLookAhead? OptionModifierOmitMatch? OptionModifierReplaceMatch?

OptionModifierInvert:
	"!"_

OptionModifierQuantifier:
	[ "?" "*" "+" ]

OptionModifierLookAhead:
	"~"_

OptionModifierOmitMatch:
	"_"_

OptionModifierReplaceMatch:
	"->"_ [ Identifier String MatchStack ]

# ---------------- OPTION EXECUTORS ----------------

RuleOptionExecutors(hidden):
	"{"_ RuleOptionExecutor (Whitespace?_ "," Whitespace?_ RuleOptionExecutor)* "}"_

RuleOptionExecutor:
	Identifier Identifier

# ---------------- MATCHERS ----------------

Matcher(hidden):
	MatchAnyChar
	MatchAll
	MatchAny
	MatchRange
	MatchExact
	MatchRule
	MatchStack

MatchAnyChar:
	"."

MatchAll(fuse):
	"("_ Whitespace?_ RuleOptionDefinition Whitespace?_ ")"_

MatchAny:
	"["_ Whitespace?_ RuleOptionDefinition Whitespace?_ "]"_

MatchRange:
	"'"_ MatchRangeChar#2 "'"_

MatchExact(fuse):
	String

MatchRule:
	Identifier [ "^"_->InsertContent "^"!~_->:asdf.0: ]

MatchStack:
	":"_ Identifier "."_ Integer ":"_

# ---------------- IDENTIFIER ----------------

Identifier(fuse):
	AlphaChar AlnumChar*

# ---------------- COMMENT ----------------

Comment(fuse):
	"#" "\n"!*

# ---------------- MISCELLANEOUS ----------------

MatchRangeChar:
	"\\"? .

String(fuse):
	"\""_ StringChar* "\""_

Integer:
	NumChar+

StringChar(hidden):
	"\\\\"
	"\\\""
	"\""!

AlphaChar(hidden):
    'az'
    'AZ'

NumChar(hidden):
    '09'

AlnumChar(hidden):
    AlphaChar
    NumChar

Newline(hidden):
    "\n"

Whitespace(fuse):
    [ " " "\t" ]+