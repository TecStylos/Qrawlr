\\ ---------------- GLOBAL CODE ----------------

GlobalCode:
    GlobalCodeLine ( Newline_ GlobalCodeLine? )*

GlobalCodeLine:
    GlobalCodeStatement

GlobalCodeStatement(hidden):
    Import
    Pass
    SpaceDefinition

\\ ---------------- PASS ----------------

Pass:
    "pass"_

\\ ---------------- IMPORT ----------------

Import:
    "import"_ ( "."_ Identifier )*->ImportModifiers Whitespace_ StringLiteral->ImportPath

\\ ---------------- SPACE DEFINITION ----------------

SpaceDefinition:
    SpaceHeader Newline_ IndentationIncrease_ SpaceBody IndentationDecrease_

SpaceHeader:
    "space"_ Whitespace_ Identifier ":"_

SpaceBody:
    SpaceBodyLine ( Newline_ IndentationCurrent_ SpaceBodyLine )*

SpaceBodyLine:
    SpaceBodyStatement

SpaceBodyStatement(hidden):
    Pass
    SpaceDefinition

\\ ---------------- INDENTATION ----------------

IndentationCurrent:
    :IndentationStack.0:

IndentationIncrease:
    ( IndentationCurrent Whitespace ){ onMatch: push(_, IndentationStack) }

IndentationDecrease:
    "a"{ onMatch: pop(IndentationStack) }

\\ ---------------- IDENTIFIER ----------------

Identifier(fuse):
    IdentifierCharFirst IdentifierCharRemaining*

IdentifierCharFirst(hidden):
    'az'
    'AZ'
    "_"

IdentifierCharRemaining(hidden):
    IdentifierCharFirst
    '09'

\\ ---------------- LITERALS ----------------

StringLiteral(fuse):
    "\""_ StringLiteralChar* "\""_

StringLiteralChar(hidden):
    "\\\\"
    "\\\""
    "\""!

\\ ---------------- COMMENTS ----------------

CommentChain(hidden):
    Comment ( Newline_ Comment )*

Comment:
    CommentSingleLine
    CommentMultiLine

CommentSingleLine(hidden fuse):
    Whitespace?_ "\\\\" Newline!*

CommentMultiLine(hidden fuse):
    Whitespace?_ "\\*" "*\\"!* "*\\"

\\ ---------------- MISCELLANEOUS ----------------

AlphaChar(hidden):
    'az'
    'AZ'

NumChar(hidden):
    '09'

AlnumChar(hidden):
    AlphaChar
    NumChar

Newline(hidden):
    "\n"

Whitespace(fuse):
    [ " " "\t" ]+