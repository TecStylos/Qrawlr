\\ ---------------- GRAMMAR ----------------

Grammar:
    GrammarLine ( Newline_ GrammarLine )*

GrammarLine(hidden):
    RuleDefinition Whitespace?_ Comment?
    Comment
    Whitespace?_ Newline~_

\\ ---------------- RULE DEFINITION ----------------

RuleDefinition:
    RuleHeader [ (Newline Whitespace) Whitespace? ]_ RuleBody

RuleHeader:
    Identifier RuleModifierList?_ ":"_

RuleBody:
    RuleOptionDefinition (Newline_ Whitespace_ RuleOptionDefinition)*

\\ ---------------- RULE MODIFIERS ----------------

RuleModifierList(hidden):
    "("_ RuleModifier (Whitespace_ RuleModifier)* ")"_

RuleModifier:
    "hidden"
    "fuse"

\\ ---------------- RULE OPTION ----------------

RuleOptionDefinition:
    FullMatcher (Whitespace?_ FullMatcher)*

\\ ---------------- MATCHERS ----------------

FullMatcher:
    Matcher MatcherModifiers MatcherActions?

Matcher(hidden):
    MatchAnyChar
    MatchAll
    MatchAny
    MatchRange
    MatchExact
    MatchRule
    MatchStack

MatchAnyChar:
    "."_

MatchAll(fuse):
    "("_ WoNwoC? FullMatcher (WoNwoC? FullMatcher)* WoNwoC? ")"_

MatchAny:
    "["_ WoNwoC? FullMatcher (WoNwoC? FullMatcher)* WoNwoC? "]"_

MatchRange:
    "'"_ MatchRangeChar#2 "'"_

MatchExact(fuse):
    String

MatchRule:
    Identifier

MatchStack:
    ":"_ Identifier "."_ Integer ":"_

\\ ---------------- MATCHER MODIFIERS ----------------

MatcherModifiers(hidden):
    MatcherModifierInvert? MatcherModifierQuantifier? MatcherModifierLookAhead? MatcherModifierOmitMatch? MatcherModifierReplaceMatch?

MatcherModifierInvert:
    "!"_

MatcherModifierQuantifier:
    [ "?" "*" "+" ]->QuantifierSymbolic
    ( "#"_ Integer "-"_ Integer )->QuantifierRange
    ( "#"_ Integer )->QuantifierExact
    ( "#"_ ">"_ Integer )->QuantifierLowerBound
    ( "#"_ "<"_ Integer )->QuantifierUpperBound

MatcherModifierLookAhead:
    "~"_

MatcherModifierOmitMatch:
    "_"_

MatcherModifierReplaceMatch:
    "->"_ [ Identifier String MatchStack ]

\\ ---------------- MATCHER ACTIONS ----------------

MatcherActions(hidden):
    "{"_ WoNwoC? ( MatcherTrigger ( WoNwoC? ","_ WoNwoC? MatcherTrigger )* WoNwoC? )? "}"_

MatcherTrigger:
    Identifier WoNwoC? ":"_ WoNwoC? MatcherActionList

MatcherActionList:
    "["_ WoNwoC? ( MatcherAction ( WoNwoC? ","_ WoNwoC? MatcherAction )* WoNwoC? ) "]"_
    MatcherAction

MatcherAction:
    Identifier WoNwoC? MatcherActionArgumentList

MatcherActionArgumentList:
    "("_ WoNwoC? ( MatcherActionArgument ( WoNwoC? ","_ WoNwoC? MatcherActionArgument )* WoNwoC? ) ")"_

MatcherActionArgument:
    Identifier
    String
    "_"_->MatchedText

\\ ---------------- IDENTIFIER ----------------

Identifier(fuse):
    AlphaChar AlnumChar*

\\ ---------------- COMMENT ----------------

Comment(fuse):
    "\\\\" Newline!*

\\ ---------------- MISCELLANEOUS ----------------

MatchRangeChar:
    "\\"? .

Integer(fuse):
    "0x"_ HexChar+ ""_->FormatHex
    "0b"_ BinChar+ ""_->FormatBin
    "0"_ OctChar+ ""_->FormatOct
    DecChar+ ""_->FormatDec

String(fuse):
    "\""_ StringChar* "\""_

StringChar(hidden):
    EscapeSequence
    "\""!

EscapeSequence(fuse):
    "\\"_ [ "a" "b" "e" "f" "n" "r" "t" "v" "\\" "'" "\"" ]
    "\\"_ "x" HexChar HexChar

AlphaChar(hidden):
    'az'
    'AZ'

HexChar(hidden):
    '09'
    'af'
    'AF'

BinChar(hidden):
    '01'

OctChar(hidden):
    '07'

DecChar(hidden):
    '09'

AlnumChar(hidden):
    AlphaChar
    DecChar

Newline(hidden):
    "\x0a"

Whitespace(fuse):
    [ " " "\t" ]+

\\ Whitespace or Newline with optional comment
WoNwoC(hidden):
    [ Whitespace_ Newline_ Comment ]+