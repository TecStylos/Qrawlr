Code:
	(CodeLine "\n"_)* CodeLine?

CodeLine(hidden):
	Whitespace?_ Statement? Whitespace?_ Comment?

Statement(hidden):
	InstructionUsage
	LabelDefinition

InstructionUsage:
	InstructionName (Whitespace_ InstructionArgument)*

InstructionName:
	[ "add" "or" "shl" "li" "lui" "lli" "st" "ld" "jlz" "jnz" "jmp" "mov" ]

Whitespace(fuse):
	[" " "\t"]+

InstructionArgument:
	RegisterName ("("_ Literal ")"_)?
	Literal

RegisterName(fuse):
	"r" NumChar+

Literal:
	"sts" ":"_ String
	( [ "rel" "upr" "lwr" ] ":"_ )? [ LiteralInteger LabelName ]

LiteralInteger(fuse):
	(
		Sign?
		[
			( "0x" [ '09' 'af' 'AF' ]+ )
			( "0b" '01'+ )
			( "0"~_  '07'* )
			'09'+
		]
	)

Sign(hidden): [ "+"_ "-" ]

LabelName(fuse): AlphaChar AlnumChar*
LabelDefinition: "->"_ LabelName

Comment(fuse): "~~" "\n"!*
String(fuse): "\""_ StringChar* "\""_

StringChar(hidden):
    EscapeSequence
    "\""!

EscapeSequence(fuse):
    "\\"_ [ "a" "b" "e" "f" "n" "r" "t" "v" "\\" "'" "\"" ]
    "\\"_ "x" HexChar HexChar

HexChar(hidden): [ '09' 'af' 'AF' ]
AlnumChar(hidden): [ AlphaChar NumChar ]
AlphaChar(hidden): [ 'az' 'AZ' ]
NumChar(hidden): '09'